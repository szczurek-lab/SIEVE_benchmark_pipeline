import shutil

include: "scripts/constants.py"
include: "scripts/utils.py"

#########################################################
#              Get simulated dataset names              #
#########################################################

SIMUDATASETNAMES = get_dataset_names(SIMUSNVSITESDIR)


#######################################################
#               Gather trees from SIFIT               #
#######################################################

# Rule: gather inferred trees from SIFIT with TRUE parameters and filtered SNVs called by Monovar working with TRUE parameters
rule gatherSifitTreesTrueMonovarSNVsTrueParams:
    input:
        inferredTrees = expand(SIFITTRUEMONOVARSNVSTRUEPARAMSLOCALDIR + "{datasetName}/data_mlTree.newick", datasetName=SIMUDATASETNAMES),
        trueTrees = expand(SIMUCONVERTEDTRUETREEDIR + config["benchmark"]["simulation"]["treesWithoutTrunkWithoutNormalDir"] + config["benchmark"]["simulation"]["treesPre"] + ".{datasetName}", datasetName=SIMUDATASETNAMES)
    output:
        ANALYSISTREECOMPDIR + "from_sifit_" + config["benchmark"]["analysis"]["trueMonovarSNVs"] + "_" + config["benchmark"]["analysis"]["trueParameters"] + ".tsv"
    params:
        forSieve=False,
        datasetNames=SIMUDATASETNAMES,
        trueTreesDir=SIMUCONVERTEDTRUETREEDIR + config["benchmark"]["simulation"]["treesWithoutTrunkWithoutNormalDir"],
        trueTreesPre=config["benchmark"]["simulation"]["treesPre"],
        tool="sifit",
        snvType=config["benchmark"]["analysis"]["trueMonovarSNVs"],
        toolSetup=config["benchmark"]["analysis"]["trueParameters"],
        cellNum=config["benchmark"]["analysis"]["cellNum"],
        covMean=config["benchmark"]["analysis"]["covMean"],
        covVariance=config["benchmark"]["analysis"]["covVariance"],
        effSeqErrRate=config["benchmark"]["analysis"]["effSeqErrRate"],
        adoRate=config["benchmark"]["analysis"]["adoRate"],
        deletionRate=config["benchmark"]["analysis"]["deletionRate"],
        insertionRate=config["benchmark"]["analysis"]["insertionRate"]
    conda:
        "scripts/envs/pandas.yaml"
    script:
        "scripts/gather_inferred_trees_part.py"


########################################################
#               Get estimates from SIFIT               #
########################################################

# Rule: get parameter estimates from SIFIT with TRUE parameters and filtered SNVs called by Monovar working with TRUE parameters
rule getSifitParamsWithTrueMonovarSNVsTrueParams:
    input: 
        expand(SIFITTRUEMONOVARSNVSTRUEPARAMSLOCALDIR + "{datasetName}/true_out", datasetName=SIMUDATASETNAMES)
    output: 
        ANALYSISPARAMSDIR + "from_sifit_" + config["benchmark"]["analysis"]["trueMonovarSNVs"] + "_" + config["benchmark"]["analysis"]["trueParameters"] + ".tsv"
    params:
        cellNum=config["benchmark"]["analysis"]["cellNum"],
        covMean=config["benchmark"]["analysis"]["covMean"],
        covVariance=config["benchmark"]["analysis"]["covVariance"],
        datasetNames=SIMUDATASETNAMES,
        tool="sifit",
        snvType=config["benchmark"]["analysis"]["trueMonovarSNVs"],
        toolSetup=config["benchmark"]["analysis"]["trueParameters"]
    conda:
        "scripts/envs/pandas.yaml"
    script:
        "scripts/get_param_estimates_sifit.py"
